version: "3.8"

services:
    # Next.js 프론트엔드 (개발환경)
    react-app:
        container_name: aphennet-nextjs-dev
        build:
            context: ./fe
            dockerfile: Dockerfile
            target: development
            args:
                NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-https://aphennetapi.likeweb.co.kr}
                NEXT_PUBLIC_SITE_ID: ${NEXT_PUBLIC_SITE_ID:-aphennet}
                NEXT_PUBLIC_MAINT_NAME: ${NEXT_PUBLIC_MAINT_NAME:-Aphennet}
                NEXT_PUBLIC_ENCRYPTION_KEY: ${NEXT_PUBLIC_ENCRYPTION_KEY:-LnsSEX1tg3A3OMD4/qdtbapFwF3abNfA84xUJ2M/1mw=}
        restart: always
        ports:
            - "${REACT_EXPOSE_PORT:-3000}:3000"
        volumes:
            - ./fe:/app
            - nextjs_node_modules:/app/node_modules
        environment:
            - NODE_ENV=development
            - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-https://aphennetapi.likeweb.co.kr}
            - TZ=Asia/Seoul
        env_file:
            - ./.env
        networks:
            - aphennet_dev_net

    # Node.js 백엔드 (개발환경) - 운영 DB 사용
    node-app:
        container_name: aphennet-nodejs-dev
        build:
            context: ./be
            dockerfile: Dockerfile
            target: development
        restart: always
        ports:
            - "${NODE_EXPOSE_PORT:-3001}:3000"
        volumes:
            - ./be:/app
            - nodejs_node_modules:/app/node_modules
            - ./be/upload:/app/upload
        environment:
            - NODE_ENV=development
            - TZ=Asia/Seoul
        env_file:
            - ./.env
        networks:
            - aphennet_dev_net
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s

volumes:
    nextjs_node_modules:
    nodejs_node_modules:

networks:
    aphennet_dev_net:
        driver: bridge
