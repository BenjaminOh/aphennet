events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # 로그 설정
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # 업스트림 서버 정의
    upstream nextjs_backend {
        server aphennet-nextjs:3000;
    }

    upstream nodejs_backend {
        server aphennet-nodejs:3000;
    }

    # HTTP 서버 블록 - 프론트엔드 도메인 (Next.js)
    server {
        listen 80;
        server_name aphennet.likeweb.co.kr;
        
        # Let's Encrypt 인증서 발급을 위한 경로
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # HTTP를 HTTPS로 리다이렉트
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS 서버 블록 - 프론트엔드 도메인 (Next.js)
    server {
        listen 443 ssl;
        server_name aphennet.likeweb.co.kr;

        # SSL 인증서 설정
        ssl_certificate /etc/letsencrypt/live/aphennet.likeweb.co.kr/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/aphennet.likeweb.co.kr/privkey.pem;
        
        # SSL 보안 설정
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Next.js 백엔드로 프록시
        location / {
            proxy_pass http://nextjs_backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # HTTP 서버 블록 - API 도메인 (HTTP to HTTPS 리다이렉트)
    server {
        listen 80;
        server_name aphennetapi.likeweb.co.kr;
        
        # Let's Encrypt 인증서 발급을 위한 경로
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # HTTP를 HTTPS로 리다이렉트
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS 서버 블록 - API 도메인 (SSL 인증서 발급 후 활성화)
    server {
        listen 443 ssl;
        server_name aphennetapi.likeweb.co.kr;

        # SSL 인증서 설정
        ssl_certificate /etc/letsencrypt/live/aphennet.likeweb.co.kr/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/aphennet.likeweb.co.kr/privkey.pem;
        
        # SSL 보안 설정
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # 헬스체크
        location /health {
            proxy_pass http://nodejs_backend/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # API 기본 루트와 버전 경로 모두 Node로
        location / {
            proxy_pass http://nodejs_backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /upload/ {
            proxy_pass http://nodejs_backend/upload/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}