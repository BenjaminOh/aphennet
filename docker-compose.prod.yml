version: "3.8"

services:
    # Nginx 리버스 프록시 (운영환경 - HTTPS)
    nginx:
        container_name: aphennet-nginx-prod
        image: nginx:alpine
        restart: always
        ports:
            - "${NGINX_EXPOSE_PORT:-80}:80"
            - "${NGINX_HTTPS_PORT:-443}:443"
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./certbot/conf:/etc/letsencrypt:ro
            - ./certbot/www:/var/www/certbot:ro
        environment:
            - NGINX_SERVER_NAME=${NGINX_SERVER_NAME:-aphennet.likeweb.co.kr}
            - USE_SSL=true
        depends_on:
            - react-app
            - node-app
        networks:
            - aphennet_net

    # Certbot for SSL certificates (운영환경)
    certbot:
        container_name: aphennet-certbot-prod
        build:
            context: ./certbot
            dockerfile: Dockerfile
        volumes:
            - ./certbot/conf:/etc/letsencrypt
            - ./certbot/www:/var/www/certbot
        networks:
            - aphennet_net
        restart: unless-stopped

    # Next.js 프론트엔드 (운영환경)
    react-app:
        extends:
            file: docker-compose.base.yml
            service: react-app
        environment:
            - NODE_ENV=production
            - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL_PROD:-https://aphennetapi.likeweb.co.kr}
            - TZ=Asia/Seoul
        volumes: []  # 운영환경에서는 볼륨 마운트 제거

    # Node.js 백엔드 (운영환경)
    node-app:
        extends:
            file: docker-compose.base.yml
            service: node-app
        environment:
            - NODE_ENV=production
            - TZ=Asia/Seoul
        volumes: []  # 운영환경에서는 볼륨 마운트 제거

    # MariaDB (운영환경)
    mariadb:
        extends:
            file: docker-compose.base.yml
            service: mariadb

volumes:
    mariadb_data:
    nextjs_node_modules:
    nodejs_node_modules:

networks:
    aphennet_net:
        driver: bridge
